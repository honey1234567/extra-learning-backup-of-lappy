Asteroid collision
class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> st = new Stack<>();
        for(int i:asteroids){
            if(i>0){
                st.push(i);
            }else{
                while(!st.isEmpty() && st.peek() >0 && st.peek()<-i){
                    st.pop();
                } 
            if(st.isEmpty() || st.peek() <0){
                st.push(i);
            }
            if(st.peek() == -i){//before pop operation handle all with st.isEmpty check and push
                st.pop();
            }
        }
        }
        int s = st.size();
        int i=0;
        int[] ans = new int[s];
        for(int x:st){
            ans[i++] = x;
        }
        return ans;
    }
}
//////////////////////////////
Example 1:

Input: asteroids = [5,10,-5]
Output: [5,10]
Explanation: The 10 and -5 collide resulting in 10. The 5 and 10 never collide.
Example 2:

Input: asteroids = [8,-8]
Output: []
Explanation: The 8 and -8 collide exploding each other.
Example 3:

Input: asteroids = [10,2,-5]
Output: [10]
Explanation: The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.

Your input
[-2,-2]
Output
[-2,-2]
Expected
[-2,-2]